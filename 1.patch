From 86b25141d4980df7e4f72863a5f689138fb9fc46 Mon Sep 17 00:00:00 2001
From: Gyuyoung Kim <gyuyoung@igalia.com>
Date: Mon, 25 Feb 2019 04:11:22 +0000
Subject: [PATCH] BlinkMemoryMgt: Annotate ScopedPromiseResolver with
 USING_FAST_MALLOC

The OnionSoup effort has a goal of allocating all garbage-collectable Blink objects
with Oilpan or PartitionAlloc. However, ScopedPromiseResolver class has not yet been
allocated with it so far. So their uses of non-garbage-collected objects should be
restricted to cases where the garbage collector can discover their references.
The macros of Allocator will be useful for the non-garbage-collected objects to
avoid unintended allocations.

After some analyzes, it was concluded that for the case of ScopedPromiseResolver class,
it makes sense to use USING_FAST_MALLOC because it has been used with std::unique_ptr.

Bug: 919389
Change-Id: Ieb3abafe8ab0b996ca3749d022a4dee1cb4b5d2f
Reviewed-on: https://chromium-review.googlesource.com/c/1484883
Reviewed-by: Kentaro Hara <haraken@chromium.org>
Commit-Queue: Gyuyoung Kim <gyuyoung@igalia.com>
Cr-Commit-Position: refs/heads/master@{#635026}
---
 .../modules/credentialmanager/scoped_promise_resolver.h        | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/third_party/blink/renderer/modules/credentialmanager/scoped_promise_resolver.h b/third_party/blink/renderer/modules/credentialmanager/scoped_promise_resolver.h
index 6892b99240057..487549919cfde 100644
--- a/third_party/blink/renderer/modules/credentialmanager/scoped_promise_resolver.h
+++ b/third_party/blink/renderer/modules/credentialmanager/scoped_promise_resolver.h
@@ -7,11 +7,14 @@
 
 #include "base/macros.h"
 #include "third_party/blink/renderer/bindings/core/v8/script_promise_resolver.h"
+#include "third_party/blink/renderer/platform/wtf/allocator.h"
 
 namespace blink {
 
 // Off-heap wrapper that holds a strong reference to a ScriptPromiseResolver.
 class ScopedPromiseResolver {
+  USING_FAST_MALLOC(ScopedPromiseResolver);
+
  public:
   explicit ScopedPromiseResolver(ScriptPromiseResolver* resolver);
 
